stages:
  - build
  - package
  - deploy

build:
  image: openjdk:17-alpine
  stage: build
  before_script:
    - chmod +x gradlew
    - set +x && echo "$APPLICATION_YML" > src/main/resources/application.yml && set -x
  script:
    - ./gradlew clean
    - ./gradlew build -x test
  artifacts:
    paths:
      - build/libs/*.jar
  only:
    - master
  tags:
    - dev

package:
  image: docker:latest
  stage: package
  variables:
    IMAGE_NAME: emmerce-api
  before_script:
    - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_ID --password-stdin
  script:
    - docker build --build-arg JAR_FILE=build/libs/*.jar --build-arg YML_FILE=src/main/resources/application.yml -t $DOCKER_HUB_USER/$IMAGE_NAME .
    - docker push $DOCKER_HUB_USER/$IMAGE_NAME
  after_script:
    - docker logout
  only:
    - master
  tags:
    - dev

deploy:
  image: docker:latest
  stage: deploy
  variables:
    IMAGE_NAME: emmerce-api
    CONTAINER_NAME: emmerce-api-container
  before_script:
    - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_ID --password-stdin
  script:
    - docker stop $CONTAINER_NAME || true
    - docker rm $CONTAINER_NAME || true
    - docker rmi $DOCKER_HUB_USER/$IMAGE_NAME || true
    - docker run -d --restart always -p 8088:8088 --name $CONTAINER_NAME $DOCKER_HUB_USER/$IMAGE_NAME
  after_script:
    - docker logout
  only:
    - master
  tags:
    - dev
